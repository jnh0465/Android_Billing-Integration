package com.example.otm;

import android.Manifest;
import android.annotation.SuppressLint;
import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Build;
import android.os.Bundle;
import android.os.Message;
import android.provider.Settings;
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.webkit.CookieManager;
import android.webkit.GeolocationPermissions;
import android.webkit.WebChromeClient;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.Toast;

import com.example.otm.Payment.InicisWebViewClient;
import com.example.otm.Payment.PaymentActivity;

import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.security.SecureRandom;
import java.security.cert.CertificateException;
import java.security.cert.X509Certificate;

import javax.net.ssl.HostnameVerifier;
import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSession;
import javax.net.ssl.X509TrustManager;

//렉스웹뷰

public class LexActivity extends AppCompatActivity {
    private WebView mainWebView;
    private static final String APP_SCHEME = "iamporttest://";
    public Context mContext;

    @SuppressLint("NewApi") @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_lex);
        mContext = this.getApplicationContext();

        mainWebView = (WebView) findViewById(R.id.webView);
        mainWebView.setWebViewClient(new InicisWebViewClient(LexActivity.this));
        WebSettings settings = mainWebView.getSettings();
        settings.setJavaScriptEnabled(true);
        settings.setSupportMultipleWindows(true);                 //웹뷰속웹뷰
        settings.setJavaScriptCanOpenWindowsAutomatically(true);

        mainWebView.setScrollBarStyle(View.SCROLLBARS_INSIDE_OVERLAY); //스크롤영역차지
        mainWebView.setHorizontalScrollBarEnabled(false); // 세로 스크롤 제거
        mainWebView.setVerticalScrollBarEnabled(false); // 가로 세로 제거
        //mainWebView.scrollTo(0,200);

        if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
            settings.setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);
            CookieManager cookieManager = CookieManager.getInstance();
            cookieManager.setAcceptCookie(true);
            cookieManager.setAcceptThirdPartyCookies(mainWebView, true);
        }

        mainWebView.setWebChromeClient(new WebChromeClient(){
            @Override
            public void onGeolocationPermissionsShowPrompt(String origin, GeolocationPermissions.Callback callback) {
                super.onGeolocationPermissionsShowPrompt(origin, callback);
                callback.invoke(origin, true, false);
            }
        });

        Intent intent = getIntent();
        Uri intentData = intent.getData();
        Bundle bundle = intent.getExtras();
        String testValue = bundle.getString("UUID");                     //MainActivity에서 Intent.putString / getString 으로 uuid 값 넘겨옴

        Toast.makeText(getApplicationContext(), testValue, Toast.LENGTH_LONG).show();               //TOAST로 표시, 확인용
        new LexActivity.JSONTask().execute("http://YOURSERVER:3000/post");//AsyncTask 시작시킴     //uuid를 렉스로 보낼 수단 ////#######################################

        if ( intentData == null ) {
            mainWebView.loadUrl("https://YOURSERVER/index1.html");  //웹뷰 렉스 url
        } else {
            //isp 인증 후 복귀했을 때 결제 후속조치
            //지금은 결제후 다시 url로 옴!
            String url = intentData.toString();
            if ( url.startsWith(APP_SCHEME) ) {
                String redirectURL = url.substring(APP_SCHEME.length()+3);
                mainWebView.loadUrl(redirectURL);
            }
        }
    }

    public class JSONTask extends AsyncTask<String, String, String> {                  //uuid를 서버로 던져주는 코드
        @Override
        protected String doInBackground(String... urls) {
            try {
                Intent intent = getIntent();
                Bundle bundle = intent.getExtras();
                String testValue = bundle.getString("UUID");   //다시 MainActivity의 uuid를 Intent.getString으로 가져와서 별수에 저장

                JSONObject jsonObject = new JSONObject();
                jsonObject.accumulate("UUID",  testValue);  //UUIDPre라는 getSharedPreferences에 있는 UUIDValue을 가져옴 / 디폴트값은 0임

                HttpURLConnection con = null;
                BufferedReader reader = null;

                try {
                    HttpsURLConnection.setDefaultHostnameVerifier(new HostnameVerifier() {
                        public boolean verify(String hostname, SSLSession session) {
                            return true;
                        }
                    });

                    SSLContext context = SSLContext.getInstance("TLS");
                    context.init(null, new X509TrustManager[]{ new X509TrustManager(){
                        public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {}
                        public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {}
                        public X509Certificate[] getAcceptedIssuers() {
                            return new X509Certificate[0];
                        }
                    }}, new SecureRandom());

                    HttpsURLConnection.setDefaultSSLSocketFactory(context.getSocketFactory());
                    URL url = new URL("http://YOURSERVER:3000/post"); //https://YOURSERVER/post
                    con = (HttpURLConnection) url.openConnection();
                    con.setRequestMethod("POST");
                    con.setRequestProperty("Cache-Control", "no-cache");
                    con.setRequestProperty("Content-Type", "application/json");
                    con.setRequestProperty("Accept", "text/html");
                    con.setDoOutput(true);
                    con.setDoInput(true);
                    con.connect();

                    OutputStream outStream = con.getOutputStream();
                    BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(outStream));
                    writer.write(jsonObject.toString());
                    writer.flush();
                    writer.close();

                    InputStream stream = con.getInputStream();
                    reader = new BufferedReader(new InputStreamReader(stream));
                    StringBuffer buffer = new StringBuffer();
                    String line = "";
                    while((line = reader.readLine()) != null){
                        buffer.append(line);
                    }
                    return buffer.toString();
                } catch (MalformedURLException e){
                    e.printStackTrace();
                } catch (IOException e) {
                    e.printStackTrace();
                } finally {
                    try {
                        if(reader != null){
                            reader.close();
                        }
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            return null;
        }

        @Override
        protected void onPostExecute(String result) {
            super.onPostExecute(result);
        }
    }

    private class WebViewClientClass extends WebViewClient {
        @Override
        public boolean shouldOverrideUrlLoading(WebView view, String url) {
            if (url.startsWith("app://")) {
                Intent intent = new Intent(mContext.getApplicationContext(), MainActivity.class);
                startActivity(intent);
                return true;
            }
            else {
                view.loadUrl(url);
                return true;
            }
        }
    }

    @Override
    protected void onNewIntent(Intent intent) {
        String url = intent.toString();
        if ( url.startsWith(APP_SCHEME) ) {
            String redirectURL = url.substring(APP_SCHEME.length()+3);
            mainWebView.loadUrl(redirectURL);
        }
    }
}
